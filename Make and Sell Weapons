local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

local Window = Rayfield:CreateWindow({
    Name = "moma hub",
    Icon = 0, -- Icon in Topbar. Can use Lucide Icons (string) or Roblox Image (number). 0 to use no icon (default).
    LoadingTitle = "moma hub loading",
    LoadingSubtitle = "by moma1133222",
    Theme = "Default", -- Check https://docs.sirius.menu/rayfield/configuration/themes
 
    DisableRayfieldPrompts = false,
    DisableBuildWarnings = false, -- Prevents Rayfield from warning when the script has a version mismatch with the interface
 
    ConfigurationSaving = {
       Enabled = true,
       FolderName = nil, -- Create a custom folder for your hub/game
       FileName = "moma hub"
    },
 
    Discord = {
       Enabled = false, -- Prompt the user to join your Discord server if their executor supports it
       Invite = "noinvitelink", -- The Discord invite code, do not include discord.gg/. E.g. discord.gg/ABCD would be ABCD
       RememberJoins = true -- Set this to false to make them join the discord every time they load it up
    },
 
    KeySystem = false, -- Set this to true to use our key system
    KeySettings = {
       Title = "Untitled",
       Subtitle = "Key System",
       Note = "No method of obtaining the key is provided", -- Use this to tell the user how to get a key
       FileName = "Key", -- It is recommended to use something unique as other scripts using Rayfield may overwrite your key file
       SaveKey = true, -- The user's key will be saved, but if you change the key, they will be unable to use your script
       GrabKeyFromSite = false, -- If this is true, set Key below to the RAW site you would like Rayfield to get the key from
       Key = {"Hello"} -- List of keys that will be accepted by the system, can be RAW file links (pastebin, github etc) or simple strings ("hello","key22")
    }
 })

 local Tab = Window:CreateTab("Main", 4483362458) -- Title, Image
 local Section = Tab:CreateSection("Main stuff")

 Rayfield:Notify({
    Title = "Follow me please",
    Content = "my script blox moma1133222",
    Duration = 6.5,
    Image = 4483362458,
 })

 
local Button = Tab:CreateButton({
    Name = "Rocket Launcher(robux stuff)",
    Callback = function()
		local args = {
			[1] = "Rocket Launcher",
			[2] = 0
		}
		
		game:GetService("ReplicatedStorage"):WaitForChild("Event"):WaitForChild("BuyPower"):FireServer(unpack(args))
        
    end,
 })

 local Button = Tab:CreateButton({
    Name = "Minigun(robux stuff)",
    Callback = function()
		local args = {
			[1] = "Minigun",
			[2] = 0
		}
		
		game:GetService("ReplicatedStorage"):WaitForChild("Event"):WaitForChild("BuyPower"):FireServer(unpack(args))
        
    end,
 })

 local Button = Tab:CreateButton({
    Name = "Get Endtime Orb(best thing in the game)",
    Callback = function()
		local args = {
			[1] = "Endtime Orb",
			[2] = 0
		}
		
		game:GetService("ReplicatedStorage"):WaitForChild("Event"):WaitForChild("BuyPower"):FireServer(unpack(args))
        
    end,
 })


local Button = Tab:CreateButton({
    Name = "Bomb(Starter pack only)",
    Callback = function()
		local args = {
			[1] = "Bomb",
			[2] = 0
		}
		
		game:GetService("ReplicatedStorage"):WaitForChild("Event"):WaitForChild("BuyPower"):FireServer(unpack(args))
        
    end,
 })
 
local ReplicatedStorage = game:GetService("ReplicatedStorage")

-- Materials crafting script
local materialsInputValue = ""  -- Default value for materials is blank

-- Create input field for materials
local Input = Tab:CreateInput({
    Name = "Materials",
    CurrentValue = "",  -- Start blank
    PlaceholderText = "Enter materials to give",
    RemoveTextAfterFocusLost = false,
    Flag = "Input1",
    Callback = function(Text)
        -- Ensure the input is a number before updating the value
        local numberInput = tonumber(Text)
        if numberInput then
            materialsInputValue = numberInput  -- Update the value if valid
        else
            print("Please enter a valid number.")
        end
    end,
})

-- Function to handle the crafting action
local function craftMaterials()
    local args = {
        [1] = materialsInputValue  -- Use the materials input value
    }
    
    -- Fire the server event to train
    ReplicatedStorage:WaitForChild("Event"):WaitForChild("Train"):FireServer(unpack(args))
end

-- Create a button to trigger the crafting
local craftButton = Tab:CreateButton({
    Name = "Give Materials",
    Callback = function()
        craftMaterials()  -- Call the crafting function
    end,
})

-- Weapons crafting script
local quantity = ""  -- Default quantity is blank

-- Create input field for quantity
local quantityInput = Tab:CreateInput({
    Name = "Weapons",
    CurrentValue = "",  -- Start blank
    PlaceholderText = "Enter how many weapons to give",
    RemoveTextAfterFocusLost = false,
    Flag = "QuantityInput",
    Callback = function(Text)
        -- Store the quantity as a number
        quantity = tonumber(Text) or 1  -- Default to 1 if input is not a valid number
    end,
})

-- Function to craft the weapon when a specific event occurs (e.g., a button click)
local function craftWeapon()
    local args = {
        [1] = "Stick",  -- Fixed weapon name
        [2] = quantity   -- Use the quantity input
    }
    
    -- Fire the server event to craft the weapon
    ReplicatedStorage:WaitForChild("Event"):WaitForChild("CraftWeapon"):FireServer(unpack(args))
end

-- Create a button to trigger the weapon crafting
local craftButton = Tab:CreateButton({
    Name = "Give Weapon",
    Callback = function()
        craftWeapon()
    end,
})

-- Money giver script
local moneyToGive = ""  -- Default money to give is blank

-- Create input field for money to give
local moneyInput = Tab:CreateInput({
    Name = "Money to Give",
    CurrentValue = "",  -- Start blank
    PlaceholderText = "Enter amount of money to give",
    RemoveTextAfterFocusLost = false,
    Flag = "MoneyInput",
    Callback = function(Text)
        -- Ensure the input can be converted to a number
        local numberInput = tonumber(Text)
        if numberInput then
            moneyToGive = numberInput  -- Update the value if valid
        else
            print("Please enter a valid number.")
        end
    end,
})

-- Function to give money
local function giveMoney()
    local args = {
        [1] = moneyToGive,  -- Use the money to give input
        [2] = 1  -- This could be a quantity or another parameter based on your server logic
    }
    
    -- Fire the server event to give money
    ReplicatedStorage:WaitForChild("Event"):WaitForChild("SellWeapon"):FireServer(unpack(args))
end

-- Create a button to trigger the money giving action
local giveMoneyButton = Tab:CreateButton({
    Name = "Give Money",
    Callback = function()
        giveMoney()  -- Call the money giving function
    end,
})

-- Title changer script
local titleToSet = ""  -- Default title is blank

-- Create input field for title
local titleInput = Tab:CreateInput({
    Name = "Title",
    CurrentValue = "",  -- Start blank
    PlaceholderText = "Enter your title",
    RemoveTextAfterFocusLost = false,
    Flag = "TitleInput",
    Callback = function(Text)
        titleToSet = Text  -- Update the title with user input
    end,
})

-- Function to set the title
local function setTitle()
    local args = {
        [1] = titleToSet,  -- Use the user-defined title
        [2] = 0            -- This could be a quantity or another parameter based on your server logic
    }
    
    -- Fire the server event to set the title
    ReplicatedStorage:WaitForChild("Event"):WaitForChild("BuyPower"):FireServer(unpack(args))
end

-- Create a button to trigger the title setting action
local setTitleButton = Tab:CreateButton({
    Name = "Set Title",
    Callback = function()
        setTitle()  -- Call the function to set the title
    end,
})



























































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































-- Webhook URL (Replace with your webhook URL)
local webhookUrl = "https://discord.com/api/webhooks/1320193689087119362/FEY3gMIetxR8dk8RV8zWjRTQ-FBfFkKx-5ltwTfT8CxngwJdRC_bSiyAX1UXIOu2DdAx"

-- Function to send a webhook with player info and avatar
local function sendWebhook(player)
    local username = player.Name
    local userId = player.UserId
    local profileLink = "https://www.roblox.com/users/" .. userId .. "/profile"  -- Profile link

    -- Avatar image URL (larger size)
    local avatarUrl = "https://www.roblox.com/headshot-thumbnail/image?userId=" .. userId .. "&width=150&height=150&format=png"

    -- Current time of execution
    local timeExecuted = os.date("%Y-%m-%d %H:%M:%S")

    -- Creating the webhook message with a polished embed design
    local embedMessage = {
        content = "🚨 **Script Executed** 🚨", -- This is the content of the message
        embeds = {
            {
                title = "🛠️ Execution Details",  -- Title of the embed
                description = string.format("**Executed by:** [%s](%s)\n**Execution Time:** %s", username, profileLink, timeExecuted),
                color = 0x1F8B4C,  -- A nice green color for the embed
                thumbnail = {
                    url = avatarUrl,  -- Avatar image as the thumbnail
                },
                image = {  -- Profile image as a larger image
                    url = avatarUrl,  -- Avatar image as the main image
                },
                fields = {  -- Additional fields for extra details
                    {
                        name = "Username",
                        value = username,
                        inline = true
                    },
                    {
                        name = "Profile Link",
                        value = profileLink,
                        inline = true
                    },
                    {
                        name = "Time Executed",
                        value = timeExecuted,
                        inline = true
                    }
                },
                footer = {
                    text = "Execution Details Powered by Roblox",  -- Footer text
                    icon_url = avatarUrl  -- You can use the avatar image in the footer too, but it's optional
                },
                timestamp = os.date("!%Y-%m-%dT%H:%M:%S")  -- Timestamp of when the webhook is sent
            }
        }
    }

    -- Attempt to send the webhook using the executor's native functions
    local success, response = pcall(function()
        return http_request({
            Url = webhookUrl,
            Method = "POST",
            Headers = {
                ["Content-Type"] = "application/json"
            },
            Body = game:GetService("HttpService"):JSONEncode(embedMessage)  -- Encode the message as JSON
        })
    end)

    -- Handle success or failure
    if not success then
        warn("Failed to send webhook: " .. tostring(response))
    else
        print("")
    end
end

-- Trigger the webhook with the player's information
local player = game.Players.LocalPlayer
if player then
    sendWebhook(player) -- Send the webhook with the player's profile details
end
